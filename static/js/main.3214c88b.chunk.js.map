{"version":3,"sources":["List.jsx","App.js","index.js"],"names":["List","props","className","onClick","onEdit","id_","onSelect","text","App","useState","task","setTask","list","localStorage","getItem","JSON","parse","getLocalItems","items","setItems","toggle","setToggle","editted","setEditted","listofTask","map","elem","id","content","itemDetails","Date","getTime","toString","alert","deleteItem","old_items","filter","arrEl","editItem","find","currEl","useEffect","setItem","stringify","type","placeholder","onChange","event","target","value","itemAdded","ReactDOM","render","document","getElementById"],"mappings":"6OA0BeA,EAtBF,SAACC,GAIX,OACA,mCACA,sBAAKC,UAAU,aAAf,UAEE,sBAAKA,UAAU,WAAf,UACK,sBAAMC,QAAS,WACPF,EAAMG,OAAOH,EAAMI,MAD3B,SAEQ,cAAC,IAAD,CAAUH,UAAU,oBAC5B,sBAAMC,QAAS,WACPF,EAAMK,SAASL,EAAMI,MAD7B,SAES,cAAC,IAAD,CAAYH,UAAU,yBAEtC,mCAAMD,EAAMM,KAAZ,a,iBCqGYC,EA7GH,WAGV,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA0BF,mBAXN,WACnB,IAAMG,EAAOC,aAAaC,QAAQ,QAElC,OAAGF,EAAaG,KAAKC,MAAMJ,GACf,GAOsBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA6BZ,mBAAS,MAAtC,mBAAOa,EAAP,KAAeC,EAAf,KASMC,EAAa,WACjB,GAAId,EAIC,GAAGA,IAASU,EACbD,EACED,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAKC,KAAOL,EACF,2BAAKI,GAAZ,IAAkBE,QAASlB,IAC1BgB,MAIbL,GAAU,GACVV,EAAQ,IACRY,EAAW,UAGR,CACL,IAAMM,EAAc,CAClBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,QAASlB,GAEXS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KAEpBlB,EAAQ,SAxBNsB,MAAM,qBAgCNC,EAAa,SAAC7B,GACjBc,GAAS,SAACgB,GACP,OAAOA,EAAUC,QAAO,SAACC,GAAD,OAAWA,EAAMV,KAAKtB,SAM9CiC,EAAW,SAACjC,GACf,IAAIiC,EAAWpB,EAAMqB,MAAK,SAACC,GACxB,OAAOA,EAAOb,KAAOtB,KAGxBgB,GAAU,GACVV,EAAQ2B,EAASV,SACjBL,EAAWlB,IAQd,OAJAoC,qBAAU,WACL5B,aAAa6B,QAAQ,OAAQ3B,KAAK4B,UAAUzB,MAC9C,CAACA,IAGF,mCACI,qBAAKhB,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACM,yDACL,uBAAO0C,KAAK,OAAOC,YAAY,2BAAiBC,SApExC,SAACC,GAClBpC,EAAQoC,EAAMC,OAAOC,QAmE0DA,MAAOvC,IAG5EU,EACA,wBAAQlB,UAAU,SAASC,QAASqB,EAApC,SACA,cAAC,IAAD,CAAiBtB,UAAU,iBAC1B,wBAAQA,UAAU,SAASC,QAASqB,EAApC,SACD,cAAC,IAAD,CAAUtB,UAAU,kBAKtB,6BAEIgB,EAAMO,KAAI,SAACyB,GACR,OAAO,cAAC,EAAD,CAAM3C,KAAO2C,EAAUtB,QAEjBvB,IAAK6C,EAAUvB,GACfrB,SAAW4B,EACX9B,OAAQkC,GAHHY,EAAUvB,iBCnG/CwB,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.3214c88b.chunk.js","sourcesContent":["import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst List = (props) =>{\r\n\r\n  //we will delete in the app component becoz props are immutable \r\n\r\n   return(\r\n   <>\r\n   <div className='todo_style'>\r\n\r\n     <div className='iconhold'>\r\n          <span onClick={()=>{\r\n                  props.onEdit(props.id_)\r\n               }}><EditIcon className='fa-times edit'/></span>\r\n          <span onClick={()=>{\r\n                  props.onSelect(props.id_)\r\n                }}><DeleteIcon className='fa-times delete'/></span>\r\n     </div>\r\n   <li> {props.text} </li>\r\n   </div>\r\n   </>\r\n   );\r\n}\r\n\r\nexport default List;","import React, {useState, useEffect} from 'react';\nimport List from './List';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst getLocalItems = () =>{\n   const list = localStorage.getItem('list');\n\n   if(list) return JSON.parse(list);\n   else return [];\n}\n\nconst App = () =>{\n\n  //hooks \n  const [task,setTask] = useState('');  //for one item\n  const [items, setItems] = useState(getLocalItems());  //array for storing tasks\n  const [toggle, setToggle] = useState(true);\n  const [editted,setEditted] = useState(null); \n\n\n//this is important to get the value inputed\n  const inputGiven = (event) =>{\n    setTask(event.target.value)\n  }\n\n//this will update the array each time a new entry is made\n  const listofTask = () =>{\n    if(!task){\n        alert('Write something!')\n    } \n\n    else if(task && !toggle){\n        setItems(\n          items.map((elem)=>{\n              if(elem.id === editted)\n                    return { ...elem, content: task}\n              return elem;\n          })\n          )\n\n        setToggle(true);\n        setTask('');\n        setEditted(null)\n      }\n\n      else {\n      const itemDetails = {\n        id: new Date().getTime().toString(),\n        content: task\n      }\n      setItems([...items, itemDetails])\n\n      setTask('');  //to empty the value after adding it to the list\n\n    }\n    \n  }\n\n\n  //delete\n  const deleteItem = (id_)=>{\n     setItems((old_items)=>{\n        return old_items.filter((arrEl) => arrEl.id!==id_)   \n        //if index no of current full array doesnt match the id we are deleting then keep it if equal delete it\n     })\n  }\n\n  //edit\n  const editItem = (id_) =>{\n     let editItem = items.find((currEl)=> {\n        return currEl.id === id_ ;\n     })\n     \n     setToggle(false);\n     setTask(editItem.content);\n     setEditted(id_);\n    }\n\n  //add data to local storage\n  useEffect(() => {\n       localStorage.setItem('list', JSON.stringify(items))\n  }, [items]);\n\n  return(\n    <>\n        <div className='main_div'>\n          <div className='center_div'>\n            <br/>\n                  <h1>To Do List 📓</h1> \n             <input type='text' placeholder='Add an Item ✍️' onChange={inputGiven} value={task}/>\n\n            {\n              toggle? \n              <button className='btn pl' onClick={listofTask} >\n              <PlaylistAddIcon className='matrialbtn'/></button>\n              :<button className='btn ed' onClick={listofTask} >\n              <EditIcon className='matrialbtn ' /> \n              </button>\n              \n            }\n\n            <ol>\n              {\n                items.map((itemAdded) => {\n                   return <List text= {itemAdded.content} \n                                key={itemAdded.id}\n                                id_={itemAdded.id}  \n                                onSelect= {deleteItem}\n                                onEdit={editItem}\n                                />\n                })\n              }\n            </ol>\n          </div>\n        </div>\n    </>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n"],"sourceRoot":""}